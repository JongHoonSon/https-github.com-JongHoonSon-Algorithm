function solution(n) {
  var answer = 0;

  let d = new Array(n + 1);

  d[1] = 1;
  d[2] = 2;
  d[3] = 3;
  d[4] = 5;

  for (let i = 5; i <= n; i++) {
    d[i] = (d[i - 1] + d[i - 2]) % 1234567;
  }

  answer = d[n] % 1234567;

  return answer;
}

// 문제 풀이 접근 방식

// 1와 2를 섞어서 나타낼 수 있는 수 n의 조합을 구하는 문제로,
// DP를 이용해 구할 수 있다.

// 12907번 거스름돈 문제와 다른 점은
// 거스름돈은 1+1+2와 1+2+1을 같은 경우로 보기 때문에,
// 화폐 단위 (쓰일 수 있는 값의 범위)마다
// d[1]부터 d[n]까지 만들 수 있는 경우를 모두 구했다면

// 멀리 뛰기 문제는 1+1+2와 1+2+1을 다른 경우로 보기 때문에
// 직전에 쓰인 d[n-1]값과 그 이전에 쓰인 d[n-2]값을 이용해
// d[n]을 구한다는 차이가 있다.

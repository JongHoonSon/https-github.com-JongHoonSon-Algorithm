function solution(n) {
  var answer = 0;

  // 배열 d는 1부터 10000까지
  // 각 수를 만들 수 있는 연속된 자연수 덧셈식의 갯수를 저장함
  let d = new Array(10001).fill(0);

  // 덧셈의 시작점
  for (let i = 1; i <= 10000; i++) {
    let sum = 0;

    // 덧셈의 시작점부터 1씩 증가하며 합산
    // 시작점이 5였다면, sum은 값은 아래와 같이 됨
    // 11 = 5+6
    // 17 = 5+6+7
    // 25 = 5+6+7+8
    // ...
    for (let j = i; sum <= 10000; j++) {
      sum = sum + j;

      // i로 시작하는 자연수의 덧셈식으로 sum을 만들 수 있으므로
      // 배열 d에 sum을 만들 수 있는 덧셈식의 수 + 1
      d[sum]++;
    }
  }

  // n을 만들 수 있는 덧셈식의 수
  answer = d[n];

  return answer;
}

// 문제 풀이 접근 방식

// 이중 반복문을 이용하여 푸는 방식이다
// 각 반복문이 최대 1만까지 반복하기 때문에
// 시간복잡도는 1만 x 1만 = 1억 이 돈다.

function solution(people, limit) {
  var answer = 0;

  people.sort((a, b) => a - b);

  let front = 0;
  let back = people.length - 1;

  let cnt = 0;

  while (true) {
    if (back === front) {
      cnt++;
      break;
    } else if (front - 1 === back) {
      break;
    } else {
      if (people[front] + people[back] <= limit) {
        front++;
        back--;
      } else {
        back--;
      }
    }
    cnt++;
  }

  answer = cnt;

  return answer;
}

// 문제 풀이 접근 방식

// 그리디 문제로, 구명보트를 최대한 적게 사용해서 사람들을 구출할 수 있는 방법을 찾는 문제이다.
// 문제를 풀기 위해서는 먼저 사람들을 몸무게 순으로 정렬한 후,
// 가장 몸무게가 큰 사람과 가장 몸무게가 작은 사람의 몸무게의 합이
// 구명보트에 한번에 실을 수 있는 무게보다 작다면(즉, 같이 구출할 수 있다면)
// 해당하는 두 사람을 구출한 것으로 처리한다.
// 배열의 모든 사람들을 구출할 때까지 위 과정을 반복하면 된다.

// 보트가 견딜 수 있는 무게인 limit과 가장 차이 안나는 두 사람을 뽑아 옮기지 않는 이유
// 물론 위 방식대로라도 풀리지만
// 10 20 70 80 에서
// 10 80과, 20 70을 구출하나
// 20 80과, 10 70을 구출하나 차이가 없기 때문에,
// 그냥 편하게 최솟값과 최댓값을 같이 구할 수 있는지 확인하고
// 같이 구할 수 있으면 같이 구하고, 같이 못구하면 최댓값만 구하는 방식을 반복하면 된다.
// (최댓값만 구하거나, 최솟값+최댓값을 같이 구하는 과정에서 발생하는 손해가 하나도 없음)
